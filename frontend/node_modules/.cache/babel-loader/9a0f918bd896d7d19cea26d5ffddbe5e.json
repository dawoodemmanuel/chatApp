{"ast":null,"code":"var _jsxFileName = \"/home/dawaad/Documents/Project/frontend/src/pages/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Contacts from '../components/Contact';\nimport './chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  useEffect(async () => {\n    if (localStorage.getItem(\"react-chat-app\")) {\n      await setCurrentUser(JSON.parse(localStorage.getItem(\"react-chat-app\")));\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n  useEffect(async () => {\n    if (currentUser) {\n      const data = await axios.get('/contact/', {\n        params: {\n          id: currentUser._id\n        }\n      });\n      setContacts(data.data);\n    }\n  }, [currentUser]);\n\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text\",\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chat, \"p5eYDDBjQHyVpuBaUvChvjAo0SA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/dawaad/Documents/Project/frontend/src/pages/Chat.jsx"],"names":["React","useState","useEffect","useNavigate","axios","Contacts","Chat","navigate","contacts","setContacts","currentUser","setCurrentUser","undefined","currentChat","setCurrentChat","localStorage","getItem","JSON","parse","data","get","params","id","_id","handleChatChange","chat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,YAAP;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEd,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACW,SAAD,CAA9C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACW,SAAD,CAA9C;AAEAV,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIa,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAJ,EAA4C;AAC1C,YAAML,cAAc,CAClBM,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CADkB,CAApB;AAGD,KAJD,MAIO;AACLT,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,GARQ,EAQN,EARM,CAAT;AAUAL,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIQ,WAAJ,EAAiB;AACf,YAAMS,IAAI,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,WAAV,EAAuB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,EAAE,EAAEZ,WAAW,CAACa;AAAlB;AAAV,OAAvB,CAAnB;AACAd,MAAAA,WAAW,CAACU,IAAI,CAACA,IAAN,CAAX;AACD;AACF,GALQ,EAKN,CAACT,WAAD,CALM,CAAT;;AAOA,QAAMc,gBAAgB,GAAIC,IAAD,IAAU;AACjCX,IAAAA,cAAc,CAACW,IAAD,CAAd;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEjB;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD;;GApCQF,I;UAEUH,W;;;KAFVG,I;AAsCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport Contacts from '../components/Contact'\nimport './chat.css'\n\nfunction Chat() {\n\n  const navigate = useNavigate()\n  const [contacts, setContacts] = useState([])\n  const [currentUser, setCurrentUser] = useState(undefined)\n  const [currentChat, setCurrentChat] = useState(undefined);\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"react-chat-app\")) {\n      await setCurrentUser(\n        JSON.parse(localStorage.getItem(\"react-chat-app\"))\n      )\n    } else {\n      navigate(\"/login\")\n    }\n  }, [])\n\n  useEffect(async () => {\n    if (currentUser) {\n      const data = await axios.get('/contact/', { params: { id: currentUser._id } })\n      setContacts(data.data)\n    }\n  }, [currentUser])\n\n  const handleChatChange = (chat) => {\n    setCurrentChat(chat);\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <Contacts contacts={contacts} />\n        <h3 className='text'>Hello</h3>\n      </div>\n    </>\n  )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}