{"ast":null,"code":"var _jsxFileName = \"/home/dawaad/Documents/Project/frontend/src/components/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  var _errors$Username, _errors$Email, _errors$Password, _errors$Password2, _errors$Password3;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const navigate = useNavigate();\n  const toastCSS = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true\n  };\n\n  const onSubmit = data => {\n    const {\n      Username,\n      Email,\n      Password\n    } = data;\n    axios.post('/register', {\n      username: Username,\n      email: Email,\n      password: Password\n    }).then(res => {\n      if (res.data === false) {\n        toast.error(\"This Email is already exist\", toastCSS);\n        console.log(\"exist\");\n      } else {\n        //toast.success(\"Registration is Sccessful\", toastCSS)\n        console.log(\"Ok\");\n        localStorage.setItem(\"react-chat-app\", res);\n        navigate('/');\n      }\n    }); // .then(res => {\n    //     if (res.data === true) {\n    //         toast.success(\"Registration is successful\", toastCSS)\n    //         localStorage.setItem(\"react-chat-app\",\n    //             JSON.stringify(check.user))\n    //     } \n    //     if(res.data === false) {\n    //         toast.error(\"This Email is already Exist\", toastCSS)\n    //     }\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register for ChatApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"formfield\",\n        placeholder: \"Enter your Username\",\n        ...register(\"Username\", {\n          required: true,\n          maxLength: 20\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), ((_errors$Username = errors.Username) === null || _errors$Username === void 0 ? void 0 : _errors$Username.type) === \"required\" && toast.error(\"User Name is required\", toastCSS), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"formfield\",\n        placeholder: \"Enter your Email\",\n        ...register(\"Email\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), ((_errors$Email = errors.Email) === null || _errors$Email === void 0 ? void 0 : _errors$Email.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"formfield\",\n        placeholder: \"Enter your Password\",\n        ...register(\"Password\", {\n          required: true,\n          minLength: 8,\n          maxLength: 20\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), ((_errors$Password = errors.Password) === null || _errors$Password === void 0 ? void 0 : _errors$Password.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), ((_errors$Password2 = errors.Password) === null || _errors$Password2 === void 0 ? void 0 : _errors$Password2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password should be of atleast of 8 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), ((_errors$Password3 = errors.Password) === null || _errors$Password3 === void 0 ? void 0 : _errors$Password3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password should not be more than 20 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"formfield\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Already have an account\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \" Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"hvZci8bfHEyrOM2r7yZN4BE/YxQ=\", false, function () {\n  return [useForm, useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/dawaad/Documents/Project/frontend/src/components/Register.jsx"],"names":["useForm","Link","useNavigate","axios","ToastContainer","toast","Register","register","handleSubmit","formState","errors","navigate","toastCSS","position","autoClose","pauseOnHover","draggable","onSubmit","data","Username","Email","Password","post","username","email","password","then","res","error","console","log","localStorage","setItem","required","maxLength","type","minLength"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form'\nimport { Link, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './form.css'\n\nfunction Register() {\n\n    const { register, handleSubmit, formState: { errors } } = useForm()\n    const navigate = useNavigate()\n    const toastCSS = {\n        position: \"bottom-right\",\n        autoClose: 8000,\n        pauseOnHover: true,\n        draggable: true,\n    }\n    const onSubmit = (data) => {\n        const { Username, Email, Password } = data\n        axios.post('/register', {\n            username: Username,\n            email: Email,\n            password: Password\n        }).then((res) => {\n            if (res.data === false) {\n                toast.error(\"This Email is already exist\", toastCSS)\n                console.log(\"exist\")\n            } else {\n                //toast.success(\"Registration is Sccessful\", toastCSS)\n                console.log(\"Ok\")\n                localStorage.setItem(\"react-chat-app\", (res))\n                navigate('/')\n            }\n        })\n\n        // .then(res => {\n\n        //     if (res.data === true) {\n        //         toast.success(\"Registration is successful\", toastCSS)\n        //         localStorage.setItem(\"react-chat-app\",\n        //             JSON.stringify(check.user))\n        //     } \n        //     if(res.data === false) {\n        //         toast.error(\"This Email is already Exist\", toastCSS)\n        //     }\n        // })\n    }\n\n    return (\n        <div className='formContainer'>\n            <h2>Register for ChatApp</h2>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <input className='formfield'\n                    placeholder='Enter your Username'\n                    {...register(\"Username\",\n                        {\n                            required: true,\n                            maxLength: 20,\n                        })} />\n                {errors.Username?.type === \"required\" &&\n                    toast.error(\"User Name is required\", toastCSS)}\n\n                <input type=\"email\"\n                    className='formfield'\n                    placeholder='Enter your Email'\n                    {...register(\"Email\", {\n                        required: true,\n                    })} />\n                {errors.Email?.type === \"required\" &&\n                    <div>Email is required</div>}\n\n                <input type=\"password\"\n                    className='formfield'\n                    placeholder='Enter your Password'\n                    {...register(\"Password\", {\n                        required: true,\n                        minLength: 8,\n                        maxLength: 20,\n                    })} />\n                {errors.Password?.type === \"required\" &&\n                    <div>Password is required</div>}\n                {errors.Password?.type === \"minLength\" &&\n                    <div>Password should be of atleast of 8 characters</div>}\n                {errors.Password?.type === \"maxLength\" &&\n                    <div>Password should not be more than 20 characters</div>}\n\n                <button className='formfield'>Register</button>\n                <span>Already have an account\n                    <Link to=\"/login\"> Login</Link></span>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}\n\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}