{"ast":null,"code":"var _jsxFileName = \"/home/dawaad/Documents/Project/frontend/src/components/ChatInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IoMdSend } from 'react-icons/io';\nimport { BsEmojiSmileFill } from 'react-icons/bs';\nimport Picker from 'emoji-picker-react'; //import './chatInput.css'\n\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatInput(_ref) {\n  _s();\n\n  let {\n    handleSendMsg\n  } = _ref;\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n\n  const handleShowEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const handleEmojiClick = (event, emoji) => {\n    let message = msg;\n    message += emoji.emoji;\n    setMsg(message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji\",\n        children: [/*#__PURE__*/_jsxDEV(BsEmojiSmileFill, {\n          onClick: handleShowEmojiPicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message here ...\",\n        value: msg,\n        onChange: e => setMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(IoMdSend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatInput, \"1jJ6EMfxImHEpDh8z2egAQFPv4U=\");\n\n_c = ChatInput;\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  padding: 0 2rem;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n  .btn-container {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 1.5rem;\n        cursor: pointer;\n      }\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n      }\n    }\n  }\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    input {\n      width: 90%;\n      height: 60%;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n      }\n    }\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      border: none;\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatInput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/home/dawaad/Documents/Project/frontend/src/components/ChatInput.jsx"],"names":["React","useState","IoMdSend","BsEmojiSmileFill","Picker","styled","ChatInput","handleSendMsg","showEmojiPicker","setShowEmojiPicker","msg","setMsg","handleShowEmojiPicker","handleEmojiClick","event","emoji","message","e","target","value","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,eAAe,SAASC,SAAT,OAAsC;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAEjD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMW,qBAAqB,GAAG,MAAM;AAChCH,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACH,GAFD;;AAIA,QAAMK,gBAAgB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvC,QAAIC,OAAO,GAAGN,GAAd;AACAM,IAAAA,OAAO,IAAID,KAAK,CAACA,KAAjB;AACAJ,IAAAA,MAAM,CAACK,OAAD,CAAN;AAEH,GALD;;AAOA,sBACI,QAAC,SAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI,QAAC,gBAAD;AAAkB,UAAA,OAAO,EAAEJ;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGQJ,eAAe,iBAAI,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAEK;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,4BAA/B;AACI,QAAA,KAAK,EAAEH,GADX;AAEI,QAAA,QAAQ,EAAGO,CAAD,IAAON,MAAM,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAF3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GApCuBb,S;;KAAAA,S;AAsCxB,MAAMc,SAAS,GAAGf,MAAM,CAACgB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzDA;MAAMD,S","sourcesContent":["import React, { useState } from 'react'\nimport { IoMdSend } from 'react-icons/io'\nimport { BsEmojiSmileFill } from 'react-icons/bs'\nimport Picker from 'emoji-picker-react'\n//import './chatInput.css'\nimport styled from 'styled-components'\n\nexport default function ChatInput({ handleSendMsg }) {\n\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false)\n    const [msg, setMsg] = useState(\"\")\n\n    const handleShowEmojiPicker = () => {\n        setShowEmojiPicker(!showEmojiPicker)\n    }\n\n    const handleEmojiClick = (event, emoji) => {\n        let message = msg\n        message += emoji.emoji\n        setMsg(message)\n\n    }\n\n    return (\n        <Container>\n            <div className=\"btn-container\">\n                <div className=\"emoji\">\n                    <BsEmojiSmileFill onClick={handleShowEmojiPicker} />\n                    {\n                        showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />\n                    }\n                </div>\n            </div>\n            <form className='input-container'>\n                <input type=\"text\" placeholder='Type your message here ...'\n                    value={msg}\n                    onChange={(e) => setMsg(e.target.value)} />\n                <button type=\"submit\">\n                    <IoMdSend />\n                </button>\n            </form>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  padding: 0 2rem;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n  .btn-container {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 1.5rem;\n        cursor: pointer;\n      }\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n      }\n    }\n  }\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    input {\n      width: 90%;\n      height: 60%;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n      }\n    }\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      border: none;\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;"]},"metadata":{},"sourceType":"module"}