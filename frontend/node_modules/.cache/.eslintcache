[{"/home/dawaad/Documents/Project/frontend/src/index.js":"1","/home/dawaad/Documents/Project/frontend/src/App.js":"2","/home/dawaad/Documents/Project/frontend/src/pages/Register.jsx":"3","/home/dawaad/Documents/Project/frontend/src/pages/Login.jsx":"4","/home/dawaad/Documents/Project/frontend/src/pages/Chat.jsx":"5","/home/dawaad/Documents/Project/frontend/src/components/Contact.jsx":"6","/home/dawaad/Documents/Project/frontend/src/components/ChatContainer.jsx":"7","/home/dawaad/Documents/Project/frontend/src/components/Welcome.jsx":"8","/home/dawaad/Documents/Project/frontend/src/components/Logout.jsx":"9","/home/dawaad/Documents/Project/frontend/src/components/ChatInput.jsx":"10","/home/dawaad/Documents/Project/frontend/src/components/Messages.jsx":"11"},{"size":221,"mtime":1649271999725,"results":"12","hashOfConfig":"13"},{"size":455,"mtime":1650044230901,"results":"14","hashOfConfig":"13"},{"size":3464,"mtime":1649793743566,"results":"15","hashOfConfig":"13"},{"size":2220,"mtime":1649792631795,"results":"16","hashOfConfig":"13"},{"size":1301,"mtime":1650729520623,"results":"17","hashOfConfig":"13"},{"size":1191,"mtime":1650725575790,"results":"18","hashOfConfig":"13"},{"size":710,"mtime":1650734685628,"results":"19","hashOfConfig":"13"},{"size":169,"mtime":1650729557444,"results":"20","hashOfConfig":"13"},{"size":377,"mtime":1650732912548,"results":"21","hashOfConfig":"13"},{"size":2697,"mtime":1650746538946,"results":"22","hashOfConfig":"13"},{"size":150,"mtime":1650734738900,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"gm3gy0",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dawaad/Documents/Project/frontend/src/index.js",[],[],["60","61"],"/home/dawaad/Documents/Project/frontend/src/App.js",[],[],["62","63"],"/home/dawaad/Documents/Project/frontend/src/pages/Register.jsx",[],[],"/home/dawaad/Documents/Project/frontend/src/pages/Login.jsx",[],[],"/home/dawaad/Documents/Project/frontend/src/pages/Chat.jsx",["64","65"],[],"import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport Contacts from '../components/Contact'\nimport ChatContainer from '../components/ChatContainer'\nimport './chat.css'\nimport Welcome from '../components/Welcome'\n\nfunction Chat() {\n\n  const navigate = useNavigate()\n  const [contacts, setContacts] = useState([])\n  const [currentUser, setCurrentUser] = useState(undefined)\n  const [currentChat, setCurrentChat] = useState(undefined);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"react-chat-app\")) {\n      setCurrentUser(\n        JSON.parse(localStorage.getItem(\"react-chat-app\"))\n      )\n    } else {\n      navigate(\"/login\")\n    }\n  }, [])\n\n  useEffect(async () => {\n    if (currentUser) {\n      const data = await axios.get('/contact/', { params: { id: currentUser._id } })\n      setContacts(data.data)\n    }\n  }, [currentUser])\n\n  const handleChatChange = (chat) => {\n    setCurrentChat(chat);\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <Contacts contacts={contacts} changeChat={handleChatChange} />\n        {currentChat === undefined ? (\n          <Welcome />\n          ) : (\n            <ChatContainer currentChat={currentChat} />\n          )}\n      </div>\n    </>\n  )\n}\n\nexport default Chat","/home/dawaad/Documents/Project/frontend/src/components/Contact.jsx",[],[],"/home/dawaad/Documents/Project/frontend/src/components/ChatContainer.jsx",[],[],"/home/dawaad/Documents/Project/frontend/src/components/Welcome.jsx",[],[],"/home/dawaad/Documents/Project/frontend/src/components/Logout.jsx",[],[],"/home/dawaad/Documents/Project/frontend/src/components/ChatInput.jsx",[],[],"/home/dawaad/Documents/Project/frontend/src/components/Messages.jsx",[],[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":24,"column":6,"nodeType":"74","endLine":24,"endColumn":8,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":26,"column":13,"nodeType":"77","endLine":31,"endColumn":4},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],["78"],["79"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["80"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [navigate]",{"range":"83","text":"84"},[719,721],"[navigate]"]